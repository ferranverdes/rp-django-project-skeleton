# Generated by Django 3.0.3 on 2020-02-19 16:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=70)),
                ('address_num', models.CharField(max_length=20)),
                ('address_info', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(max_length=70)),
                ('postal_code', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99999)])),
                ('state', models.CharField(max_length=50)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('long', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('alpha2', models.CharField(max_length=2, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[a-zA-Z]*$', code='Invalid characters', message='Ensure this field only uses alpha characters.')])),
                ('alpha3', models.CharField(max_length=3, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator('^[a-zA-Z]*$', code='Invalid characters', message='Ensure this field only uses alpha characters.')])),
                ('numeric_code', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
                ('telephone_prefix', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1999)])),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('alpha2', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[a-zA-Z]*$', code='Invalid characters', message='Ensure this field only uses alpha characters.')])),
            ],
        ),
        migrations.CreateModel(
            name='StreetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('abbreviation', models.CharField(max_length=5, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[a-zA-Z]*$', code='Invalid characters', message='Ensure this field only uses alpha characters.')])),
            ],
        ),
        migrations.CreateModel(
            name='AliasedAddress',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.Address')),
                ('alias', models.CharField(max_length=30)),
            ],
            bases=('location.address',),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.Address')),
                ('name', models.CharField(max_length=70)),
            ],
            bases=('location.address',),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.Country'),
        ),
        migrations.CreateModel(
            name='StreetTypeTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('abbreviation', models.CharField(max_length=5, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[a-zA-Z]*$', code='Invalid characters', message='Ensure this field only uses alpha characters.')])),
                ('base_street_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='location.StreetType')),
                ('translated_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.Language')),
            ],
            options={
                'unique_together': {('translated_to', 'base_street_type')},
            },
        ),
        migrations.CreateModel(
            name='LanguageTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('base_language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='location.Language')),
                ('translated_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.Language')),
            ],
            options={
                'unique_together': {('translated_to', 'base_language')},
            },
        ),
        migrations.CreateModel(
            name='CountryTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('base_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='location.Country')),
                ('translated_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.Language')),
            ],
            options={
                'unique_together': {('translated_to', 'base_country')},
            },
        ),
    ]
